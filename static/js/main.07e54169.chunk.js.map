{"version":3,"sources":["components/Navbar.js","components/Text.js","components/Alert.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","toggleMode","onClick","Text","useState","text","setText","remCap","document","getElementById","classList","remove","rows","onChange","event","target","value","style","color","disabled","length","newText","toUpperCase","showAlert","toLowerCase","add","next","replaceAll","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capital","msg","About","myStyle","backgroundColor","Footer","App","setalert","message","setTimeout","setMode","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07e54169.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <div>\r\n        <nav\r\n          className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n        >\r\n          <a className={`navbar-brand`} href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  About\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <button\r\n              className={`btn btn-${props.redMode ===\"danger\"?\"light\" : \"danger\"} my-2 my-sm-0`}\r\n              type=\"\"\r\n              onClick={props.redMode}\r\n            >\r\n              Red mode\r\n            </button>\r\n            <button\r\n              className={`btn btn-${props.goldenMode===\"warning\"?\"light\":\"warning\"} my-2 mx-2 my-sm-0`}\r\n              type=\"\"\r\n              onClick={props.goldenMode}\r\n            >\r\n              {\" \"}\r\n              Golden mode\r\n            </button> */}\r\n            <button\r\n              className={`btn btn-${\r\n                props.toggleMode === \"dark\" ? \"light\" : \"dark\"\r\n              } text-capitalize\r\n                 my-2 mx-2 my-sm-0`}\r\n              type=\"\"\r\n              onClick={props.toggleMode}\r\n            >\r\n              {props.mode === \"dark\" ? \"light\" : \"dark\"} mode\r\n            </button>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired};\r\nNavbar.defaultProps = {\r\n  title: \"Title\"\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Text(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const remCap = () => {\r\n    let copyText = document.getElementById(\"myText\");\r\n    copyText.classList.remove(\"text-capitalize\");\r\n  };\r\n  const handleUp = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    remCap();\r\n  };\r\n\r\n  const handleLo = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    remCap();\r\n  };\r\n  const handleSp = () => {\r\n    let newText = text.replaceAll(\" \", \"\");\r\n    let next = newText.replaceAll(\",\", \", \");\r\n    setText(next);\r\n    props.showAlert(\"All spaces are removed\", \"success\");\r\n  };\r\n  const handleDe = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"All text cleared\", \"success\");\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"Text Copied Successfully\", \"success\");\r\n  };\r\n  const handleRmspace = () => {\r\n    let newText = text.split(/[' ']+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n  };\r\n\r\n  const handleOnchange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCap = () => {\r\n    let copyText = document.getElementById(\"myText\");\r\n    copyText.classList.add(\"text-capitalize\");\r\n  };\r\n\r\n  // const handleNewtab = () => {\r\n  //   let copyText = document.getElementById(\"myText\");\r\n  //   let i;\r\n  //   for(i=0; i= copyText.length; i++){\r\n  //     window.open(copyText);\r\n  //   }\r\n  // };\r\n  //   const [btnText, setbtnText] = useState(\"Dark mode\");\r\n  //   const handledark = () => {\r\n  //     if(myStyle.color === \"black\"){\r\n  //       setmyStyle({\r\n  //         color: \"white\",\r\n  //         backgroundColor: \"rgb(6, 14, 61)\"\r\n  //       });\r\n  //       setbtnText(\"Light mode\");\r\n  //     }else{\r\n  //       setmyStyle({\r\n  //         color: \"black\",\r\n  //         backgroundColor: \"white\"\r\n  //       });\r\n  //             setbtnText(\"Dark mode\");\r\n  //   }\r\n  // }\r\n  return (\r\n    <div\r\n      className=\"container my-3\"\r\n      // style={props.mode}\r\n    >\r\n      <div className=\"form-group\">\r\n        <h2>Enter your text here </h2>\r\n        <textarea\r\n          className={`form-control bg-${props.mode}`}\r\n          id=\"myText\"\r\n          rows=\"8\"\r\n          onChange={handleOnchange}\r\n          value={text}\r\n          style={{ color: props.mode === \"light\" ? \"grey\" : \"white\" }}\r\n        ></textarea>\r\n        <div className=\"my-3\">\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleUp}\r\n          >\r\n            Uppercase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleLo}\r\n          >\r\n            Lowercase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleCap}\r\n          >\r\n            Capitalize\r\n          </button>\r\n\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleSp}\r\n          >\r\n            Keyword space remover\r\n          </button>\r\n\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleCopy}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleRmspace}\r\n          >\r\n            Remove Extraspaces\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            className=\"btn btn-primary my-2 mx-1\"\r\n            onClick={handleDe}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          {/* <button className=\"btn btn-primary mx-1\" onClick={handleNewtab}>\r\n              Open in new tab\r\n            </button> */}\r\n          {/* <button className=\"btn btn-primary mx-1\" onClick={handledark}>\r\n              {btnText}\r\n            </button> */}\r\n        </div>\r\n      </div>\r\n      <div className=\"my-3\">\r\n        <h2>Text summary</h2>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }\r\n          words and {text.length} characters\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          minutes to read\r\n        </p>\r\n        <h3 className=\"my-2\">Preview</h3>\r\n        <p>{text === \"\" ? \"Enter something to preview\" : text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capital = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n      <div style={{height:'50px'}}>\r\n        {props.alert && (\r\n        <div>\r\n          <div\r\n            className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n            role=\"alert\"\r\n          >\r\n            <strong>{capital(props.alert.type)}</strong> {props.alert.msg}\r\n          </div>\r\n        </div>\r\n        )}\r\n        </div>\r\n        );\r\n        \r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"rgb(10 71 125)\",\r\n    backgroundColor: props.mode === \"dark\" ? \"rgb(10 71 125)\" : \"white\",\r\n  };\r\n  // changeing title \r\n  // document.title = \"This is my title\";\r\n  // setInterval(()=>{\r\n  //     document.title = \"title\";\r\n  // }, 2000)\r\n  // setInterval(() => {\r\n  //   document.title = \"This is new title\";\r\n  // }, 1500);\r\n    return (\r\n      <div className=\"container my-3 mt-5\" >\r\n        <h1>About us</h1>\r\n        <div className=\" my-2\" id=\"accordion\" style={myStyle}>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" style={myStyle} id=\"headingOne\">\r\n              <h5 className=\"mb-0\"\r\n                  className=\"\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseOne\"\r\n                  aria-expanded=\"true\"\r\n                  aria-controls=\"collapseOne\"\r\n                >\r\n                  Free to use \r\n                </h5>\r\n            </div>\r\n\r\n            <div\r\n              id=\"collapseOne\"\r\n              className=\"collapse show\"\r\n              aria-labelledby=\"headingOne\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\" style={myStyle}>\r\n                You can use this text utitlity app for free just paste your text inside text field and just cicked the required options and that's it your work is done with just one click.  \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" style={myStyle} id=\"headingTwo\">\r\n              <h5 className=\"mb-0 collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseTwo\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseTwo\"\r\n                >\r\n                  Small Seo tools\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseTwo\"\r\n              className=\"collapse\"\r\n              aria-labelledby=\"headingTwo\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\" style={myStyle}>\r\n                This app also help in some of your seo work.\r\n                It makes easy to removes extra spaces from your text and also you can use it make removes spaces from your meta tags by cicking a button and everything is ready for you.\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-header\" style={myStyle} id=\"headingThree\">\r\n              <h5 className=\"mb-0 collapsed\"\r\n                  data-toggle=\"collapse\"\r\n                  data-target=\"#collapseThree\"\r\n                  aria-expanded=\"false\"\r\n                  aria-controls=\"collapseThree\"\r\n                >\r\n                  Support\r\n              </h5>\r\n            </div>\r\n            <div\r\n              id=\"collapseThree\"\r\n              className=\"collapse pointer\"\r\n              aria-labelledby=\"headingThree\"\r\n              data-parent=\"#accordion\"\r\n            >\r\n              <div className=\"card-body\" style={myStyle}>\r\n                We are enhancing this app everyday for a better user experience. Please support this app that elps us to grow faster.\r\n                <br />\r\n                Thank you\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n      <div className=\"bg-dark text-light\">\r\n        <p className=\" text-center align-middle py-3\">\r\n          Copyright &copy; Text utility 2021\r\n        </p>\r\n        \r\n      </div>\r\n    );\r\n}\r\n","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Text from \"./components/Text\";\r\nimport Alert from \"./components/Alert\";\r\nimport React, { useState } from \"react\";\r\nimport About from \"./components/About\";\r\nimport Footer from \"./components/Footer\";\r\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\n// import Section from \"./components/Section\";\r\n  // \"homepage\": \"https://ashishrana0.github.io/my-app\",\r\n\r\n// \"predeploy\": \"npm run build\",\r\n    // \"deploy\": \"gh-pages -d build\",\r\nfunction App() {\r\n  const [alert, setalert] = useState(null);\r\n  const showAlert = (message, type)=>{\r\n    setalert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() =>{\r\n      setalert(null);\r\n    }, 1500);\r\n  }\r\n  const [mode, setMode] = useState(\"light\");\r\n  // const goldenMode =()=>{\r\n  //   if (mode === \"light\") {\r\n  //     setMode(\"warning\");\r\n  //     document.body.style.backgroundColor = \"rgb(146 117 24)\";\r\n  //     document.body.style.color = \"#fff\";\r\n  //     showAlert(\"Dark mode enabled\", \"success\");\r\n  //   } else {\r\n  //     setMode(\"light\");\r\n  //     document.body.style.backgroundColor = \"white\";\r\n  //     document.body.style.color = \"#ffc107\";\r\n  //     showAlert(\"Light mode enabled\", \"success\");\r\n  //   }\r\n  // }\r\n  // const redMode = () => {\r\n  //   if (mode === \"light\") {\r\n  //     setMode(\"danger\");\r\n  //     document.body.style.backgroundColor = \"#580e15\";\r\n  //     document.body.style.color = \"#fff\";\r\n  //     showAlert(\"Dark mode enabled\", \"success\");\r\n  //   } else {\r\n  //     setMode(\"light\");\r\n  //     document.body.style.backgroundColor = \"white\";\r\n  //     document.body.style.color = \"#dc3545\";\r\n  //     showAlert(\"Light mode enabled\", \"success\");\r\n  //   }\r\n  // };\r\n  const toggleMode = () => {\r\n    if (mode === \"light\") {\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"rgb(3 35 64)\";\r\n      document.body.style.color = \"#fff\";\r\n      showAlert(\"Dark mode enabled\", \"success\");\r\n    } \r\n    else {\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      document.body.style.color = \"rgb(3 35 64)\";\r\n      showAlert(\"Light mode enabled\", \"success\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      \r\n      {/* <Router> */}\r\n      <Navbar\r\n        title={\"Text utilities\"}\r\n        mode={mode}\r\n        toggleMode={toggleMode}\r\n        // goldenMode={goldenMode}\r\n        // redMode={redMode}\r\n      />\r\n      <Alert alert={alert} />\r\n      {/* <Switch> */}\r\n      {/* <Route exact path=\"/about\"> */}\r\n      {/* </Route> */}\r\n      {/* <Route exact path=\"/\"> */}\r\n      <Text mode={mode} showAlert={showAlert} />\r\n      {/* </Route>\r\n        </Switch> */}\r\n      <About mode={mode} />\r\n      <Footer/>\r\n      {/* </Router> */}\r\n      {/* <Section /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}